#### PEER NETWORKING ####

# Announce my IP address/hostname to peers and allow them to share it with other peers.
# If disabled, peer networking servlet will not be started at all.
eft.shareMyAddress=true

# Port for incoming peer to peer networking requests, if enabled.
eft.peerServerPort=1954

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all IPv4 interfaces or :: to listen on all IPv4 and IPv6 interfaces
eft.peerServerHost=0.0.0.0

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to peers,
# and may be different from eft.peerServerPort (useful if you do port forwarding behind a router).
eft.myAddress=

# My platform, to be announced to peers.
eft.myPlatform=PC

# My hallmark, if available.
eft.myHallmark=

# A list of well known peer addresses / host names, separated by '; '.
eft.wellKnownPeers=

# Known bad peers to be blacklisted
eft.knownBlacklistedPeers=

# Peers used for testnet only.
eft.testnetPeers=

# Maintain active connections with at least that many peers.
eft.maxNumberOfConnectedPublicPeers=20

# Peer networking connect timeout for outgoing connections.
eft.connectTimeout=4000

# Peer networking read timeout for outgoing connections.
eft.readTimeout=8000

# Peer networking server idle timeout, milliseconds.
eft.peerServerIdleTimeout=30000

# Use the peer hallmark to only connect with peers above the defined push/pull hallmark thresholds.
# Disabling hallmark protection also disables weighting of peers by hallmark weight, so connecting
# to any of your peers becomes equally likely.
eft.enableHallmarkProtection=false

# Hallmark threshold to use when sending data to peers.
eft.pushThreshold=0

# Hallmark threshold to use when requesting data from peers.
eft.pullThreshold=0

# Blacklist peers for 600000 milliseconds (i.e. 10 minutes by default).
eft.blacklistingPeriod=600000

# Consider a new transaction or block sent after 10 peers have received it.
eft.sendToPeersLimit=10

# Enable the Jetty Denial of Service Filter for the peer networking server.
eft.enablePeerServerDoSFilter=true

# Compress Http responses for the peer networking server.
eft.enablePeerServerGZIPFilter=true

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 6874 (peer networking), 6875 (UI) and 6876 (API) will be used.
eft.isTestnet=false

# Save known peers in the database
eft.savePeers=true

# Set to false to disable use of the peers database. This will not delete saved peers.
eft.usePeersDb=true

# Set to false to disable getting more peers from the currently connected peers. Only useful
# when debugging and want to limit the peers to those in peersDb or wellKnownPeers.
eft.getMorePeers=true

# Set to true to run offline - do not connect to peers and do not listen for incoming peer
# connections. This is equivalent to setting eft.shareMyAddress=false, eft.wellKnownPeers=,
# eft.testnetPeers= and eft.usePeersDb=false, and if set to true overrides those properties.
eft.isOffline=false


#### API SERVER ####

# Accept http/json API requests.
eft.enableAPIServer=true

# Hosts from which to allow http/json API requests, if enabled.
eft.allowedBotHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for http/json API requests.
eft.apiServerPort=1956

# Host interface on which to listen for http/json API request, default localhost only.
# Set to 0.0.0.0 to allow the API server to accept requests from all network interfaces.
eft.apiServerHost=127.0.0.1

# Idle timeout for http/json API request connections, milliseconds.
eft.apiServerIdleTimeout=30000

# Directory with html and javascript files for the new client UI, and admin tools utilizing
# the http/json API.
eft.apiResourceBase=html/ui

# Java API documentation directory, optional.
eft.javadocResourceBase=html/doc

# Enable Cross Origin Filter for the API server.
eft.apiServerCORS=false

# Enable SSL for the API server (also need to set eft.keyStorePath and eft.keyStorePassword).
eft.apiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
eft.apiServerEnforcePOST=true

# Compress Http responses for the API server.
eft.enableAPIServerGZIPFilter=false


#### OLD EIP USER INTERFACE ####

# Enable the deprecated EIP user interface.
eft.enableUIServer=false

# Hosts from which to allow EIP user interface requests, if enabled.
eft.allowedUserHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for EIP user interface server.
eft.uiServerPort=1955

# Host interface for EIP user interface server, default localhost only.
# Set to 0.0.0.0 to allow the UI to be accessed on all network interfaces.
eft.uiServerHost=127.0.0.1

# Idle timeout for EIP user interface server, milliseconds.
eft.uiServerIdleTimeout=30000

# Directory with html and javascript files for the EIP client user interface.
eft.uiResourceBase=html/eip

# Enable Cross Origin Filter for EIP user interface server.
eft.uiServerCORS=false

# Enable SSL for the EIP user interface (also need to set eft.keyStorePath and eft.keyStorePassword).
eft.uiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
eft.uiServerEnforcePOST=true



#### DEBUGGING ####

# Log file, will be overwritten at every restart.
eft.log=eft.log
# The log file is now specified in logging.properties.

# Enable debug log output.
eft.debug=true
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
eft.enableLogTraceback=false

# Enable logging of exception stack traces.
eft.enableStackTraces=true

# Enable logging of Jetty messages.
eft.debugJetty=true
# Jetty logging is now specified in logging properties.

# Used for debugging peer to peer communications.
eft.communicationLoggingMask=1

# Track balances of the following accounts and related events for debugging purposes.
eft.debugTraceAccounts=

# File name for logging tracked account balances.
eft.debugTraceLog=eft-trace.csv

# Separator character for trace log.
eft.debugTraceSeparator=\t

# Quote character for trace log.
eft.debugTraceQuote="

# Log changes to unconfirmed balances.
eft.debugLogUnconfirmed=false


#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The eft_db folder is expected to be in the current working directory, will be created if missing.
eft.dbUrl=jdbc:h2:eft_db/eft;DB_CLOSE_ON_EXIT=FALSE

# Database connection JDBC url to use with the test network, if isTestnet=true
eft.testDbUrl=jdbc:h2:eft_test_db/eft;DB_CLOSE_ON_EXIT=FALSE

# Database connection timeout in seconds.
eft.dbLoginTimeout=70

# Database default lock timeout in seconds.
eft.dbDefaultLockTimeout=10

# Maximum simultaneous database connections.
eft.maxDbConnections=10

# The memory allocated to database cache, in kB.
# If set to 0, defaults to 50 % of the memory available to the JVM.
eft.dbCacheKB=0



#### JETTY ####

# Settings for the Jetty Denial Of Service Filter, used for the peer networking server only.
eft.peerServerDoSFilter.maxRequestsPerSec=30
eft.peerServerDoSFilter.delayMs=1000
eft.peerServerDoSFilter.maxRequestMs=300000

# keystore file and password, required if uiSSL or apiSSL are enabled.
eft.keyStorePath=keystore
eft.keyStorePassword=password



#### Developers only ####

# Force re-validation of blocks and transaction at start.
eft.forceValidate=false

# Print a list of peers having this version on exit.
eft.dumpPeersVersion=

